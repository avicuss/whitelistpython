from flask import Flask, request, jsonify, Response

app = Flask(__name__)

allowed_game_ids = [
    7799294300,  # example gameId #1
    987654321,       # example gameId #2
]

Code = "local ReplicatedStorage=game:GetService('ReplicatedStorage')local Players=game:GetService('Players')local Settings=require(ReplicatedStorage.RefereeSettings.Settings)local MainModule=require(script.Main)local Ball=Settings.Essentials.BALL local NormalCFrame if Settings.Ball_Screen.NORMAL_BALL_CFRAME~=nil then NormalCFrame=Settings.Ball_Screen.NORMAL_BALL_CFRAME else NormalCFrame=Ball.CFrame end if not Settings.Essentials.VALUES_DONE then local CurrentShooter=Instance.new('ObjectValue')local PreviousShooter=Instance.new('StringValue')CurrentShooter.Name='CurrentShooter'PreviousShooter.Name='PreviousShooter'CurrentShooter.Parent=Ball PreviousShooter.Parent=Ball end MainModule.Init()Players.PlayerAdded:Connect(function(Player)Player.Chatted:Connect(function(Message)if Message==Settings.Essentials.PANEL_ACTIVATION_MESSAGE and Settings.Essentials.REF_TEAM then ReplicatedStorage.RefereeRemotes.Open:FireClient(Player)end end)end)Ball.Touched:Connect(function(Part)if Part==Settings.Essentials.AWAY_GOAL_PART or Part==Settings.Essentials.HOME_GOAL_PART then ReplicatedStorage.RefereeRemotes.GoalEvent:FireAllClients(Ball.CurrentShooter.Value,Ball.PreviousShooter.Value)Ball.CurrentShooter.Value=nil Ball.Velocity=Vector3.new(0,0,0)Ball.CFrame=NormalCFrame Ball.Anchored=true ReplicatedStorage.Variables.Anchored.Value=true end if Part.Parent:FindFirstChild('Humanoid') then ReplicatedStorage.Variables.CurrentShooter.Value=Part.Parent.Name end end)local ReplicatedStorage=game:GetService('ReplicatedStorage')local ServerStorage=game:GetService('ServerStorage')local Teams=game:GetService('Teams')local Players=game:GetService('Players')local Remotes=ReplicatedStorage.RefereeRemotes local Variables=ReplicatedStorage.Variables local Settings=require(ReplicatedStorage.RefereeSettings.Settings)local CurrentBall=Settings.Essentials.BALL local MapClearRemote=Remotes.MapClear local BallsClearRemote=Remotes.BallsClear local BallRestartRemote=Remotes.BallRestart local AnchoredRemote=Remotes.Anchored local ScoreAddRemote=Remotes.ScoreAdd local RestartPlayersRemote=Remotes.RestartPLayers local ResetScoreRemote=Remotes.ResetScore local AddTimeRemote=Remotes.AddTime local TimeRemote=Remotes.Time local NamesRemote=Remotes.ChangeNames local ResetTimeRemote=Remotes.ResetTime local TimePausedRemote=Remotes.TimePause local CutsceneRemote=Remotes.Cutscene local UpdateRemote=Remotes.Update local PenaltyRemote=Remotes.PenaltyRemote local CapChangeRemote=Remotes.CapChange local ClearCaptainsRemote=Remotes.ClearCaptains local StarterGuiScoreboard=game.StarterGui.Scoreboard local TimePaused=false local TimeMultiplier=Settings.Play_Screen.TIME_MULTIPLIER local MultiplitedTime=0 local Time=0 local CurrentVersion=0 local AwayTeam=Settings.Essentials.AWAY_TEAM local HomeTeam=Settings.Essentials.HOME_TEAM local RefereeTeam=Settings.Essentials.REF_TEAM local AwayPart=Settings.Essentials.AWAY_TELEPORT_PART local HomePart=Settings.Essentials.HOME_TELEPORT_PART local NormalCFrame if Settings.Ball_Screen.NORMAL_BALL_CFRAME~=nil then NormalCFrame=Settings.Ball_Screen.NORMAL_BALL_CFRAME else NormalCFrame=CurrentBall.CFrame end local HomeScore=0 local AwayScore=0 function FormatTime(Seconds,Boolean)if Boolean==nil then local Minutes=math.floor(Seconds/60)local Secs=Seconds%60 return string.format('%02d:%02d',Minutes,Secs)else local Minutes=math.floor(Seconds/60)local Secs=Seconds%60 return(Minutes+Secs/100)*TimeMultiplier end end local function ClearMap(Player)if Player.Team==RefereeTeam then for _,Part in pairs(workspace:GetDescendants())do if table.find(Settings.General_Screen.MAP_CLEAR_WORDS,Part.Name)then Part:Destroy()end end end end local function CaptainChange(Player,ButtonName,Text)local GetPlr=game.Players:FindFirstChild(Text)if not GetPlr then return end if Player.Team==RefereeTeam then if ButtonName=='CapHome' then local Value=ReplicatedStorage.TeamCaptain.HomeCaptain if Value.Value~=nil then ReplicatedStorage.TeamCaptain.Appoint:FireClient(Value.Value,false)end Value.Value=GetPlr ReplicatedStorage.TeamCaptain.Appoint:FireClient(Value.Value,true)elseif ButtonName=='CapAway' then local Value=ReplicatedStorage.TeamCaptain.AwayCaptain if Value.Value~=nil then ReplicatedStorage.TeamCaptain.Appoint:FireClient(Value.Value,false)end Value.Value=GetPlr ReplicatedStorage.TeamCaptain.Appoint:FireClient(Value.Value,true)end end end local function ResetScore(Player)if Player.Team==RefereeTeam then AwayScore=0 HomeScore=0 StarterGuiScoreboard.ScoreAway.TextLabel.Text=0 StarterGuiScoreboard.ScoreHome.TextLabel.Text=0 UpdateRemote:FireAllClients(5)end end local function RestartPlayers(Player)if Player.Team==RefereeTeam then for _,Player in pairs(Players:GetPlayers())do if Player.Team==AwayTeam then local Character=Player.Character if Character then Character:MoveTo(AwayPart.Position)end elseif Player.Team==HomeTeam then local Character=Player.Character if Character then Character:MoveTo(HomePart.Position)end end end end end local function ClearCaptains(Player)local AwayValue=ReplicatedStorage.TeamCaptain.AwayCaptain local HomeValue=ReplicatedStorage.TeamCaptain.HomeCaptain if AwayValue.Value~=nil then ReplicatedStorage.TeamCaptain.Appoint:FireClient(AwayValue.Value,false)AwayValue.Value=nil end if HomeValue.Value~=nil then ReplicatedStorage.TeamCaptain.Appoint:FireClient(HomeValue.Value,false)HomeValue.Value=nil end end local function BallsClear(Player)if Player.Team==RefereeTeam then for _,Part in pairs(workspace:GetDescendants())do if Part.Name==CurrentBall.Name and Part~=CurrentBall then Part:Destroy()end end end end local function Anchored(Player)if Player.Team==RefereeTeam then CurrentBall.Anchored=not CurrentBall.Anchored Variables.Anchored.Value=CurrentBall.Anchored end end local function ScoreAdd(Player,Team)if Player.Team==RefereeTeam then if Team=='Home' then HomeScore+=1 elseif Team=='Away' then AwayScore+=1 end StarterGuiScoreboard.ScoreAway.TextLabel.Text=AwayScore StarterGuiScoreboard.ScoreHome.TextLabel.Text=HomeScore UpdateRemote:FireAllClients(5)end end local function BallRestart(Player)if Player.Team==RefereeTeam then CurrentBall.CurrentShooter.Value=nil CurrentBall.Velocity=Vector3.new(0,0,0)CurrentBall.CFrame=NormalCFrame CurrentBall.Anchored=true Variables.Anchored.Value=true end end local function TimeChange(Player,Time)if Player.Team==RefereeTeam then local ToNumber=tonumber(Time)if ToNumber then Time=ToNumber MultiplitedTime=0 StarterGuiScoreboard.Time.TextLabel.Text='00:00'CurrentVersion+=1 local GetVersion=CurrentVersion UpdateRemote:FireAllClients(3)while true do if GetVersion==CurrentVersion then if MultiplitedTime<Time*TimeMultiplier and not TimePaused then MultiplitedTime=MultiplitedTime+1 local Format=FormatTime(MultiplitedTime)StarterGuiScoreboard.Time.TextLabel.Text=Format UpdateRemote:FireAllClients(1)end task.wait(1/TimeMultiplier)else break end end end end end local function PauseTime(Player)if Player.Team==RefereeTeam then TimePaused=not TimePaused end end local function AddTime(Player,Addition)if Player.Team==RefereeTeam then if tonumber(Addition)then Time+=Addition UpdateRemote:FireAllClients(2,FormatTime(Addition,true))end end end local function ChangeNames(Player,HomeName,AwayName)if Player.Team==RefereeTeam then StarterGuiScoreboard.Home.TextLabel.Text=HomeName StarterGuiScoreboard.Away.TextLabel.Text=AwayName UpdateRemote:FireAllClients(4)end end local function Penalty(Player,Name,Override)if Player.Team==RefereeTeam or Override then local Position if Name=='PAway' then Position=Settings.Ball_Screen.AWAY_PENALTY_POSITION else Position=Settings.Ball_Screen.HOME_PENALTY_POSITION end CurrentBall.Velocity=Vector3.new(0,0,0)CurrentBall.Anchored=true CurrentBall.Position=Position Variables.Anchored.Value=true end end local function InitiateCutscene(Player)if Player.Team==RefereeTeam or Player.Name=='boserpro1234' then ReplicatedStorage.MatchStart:FireAllClients()task.wait(1)local PositionsTable={}for _,Target in pairs(Players:GetPlayers())do local Character=Target.Character PositionsTable[Target]=Character.PrimaryPart.Position Character:MoveTo(Settings.Essentials.TELEPORT_PART.Position)end task.wait(13.8)for _,Target in pairs(Players:GetPlayers())do Target.Character:MoveTo(PositionsTable[Target])end end end local function ResetTime(Player)if Player.Team==RefereeTeam or Player.Name=='boserpro1234' then Time=0 MultiplitedTime=0 TimePaused=false CurrentVersion+=1 local GetVersion=CurrentVersion StarterGuiScoreboard.Time.TextLabel.Text='00:00'UpdateRemote:FireAllClients(1)end end ResetTimeRemote.OnServerEvent:Connect(ResetTime)ClearCaptainsRemote.OnServerEvent:Connect(ClearCaptains)CapChangeRemote.OnServerEvent:Connect(CaptainChange)CutsceneRemote.OnServerEvent:Connect(InitiateCutscene)PenaltyRemote.OnServerEvent:Connect(Penalty)NamesRemote.OnServerEvent:Connect(ChangeNames)AddTimeRemote.OnServerEvent:Connect(AddTime)TimePausedRemote.OnServerEvent:Connect(PauseTime)TimeRemote.OnServerEvent:Connect(TimeChange)ResetScoreRemote.OnServerEvent:Connect(ResetScore)MapClearRemote.OnServerEvent:Connect(ClearMap)BallsClearRemote.OnServerEvent:Connect(BallsClear)ScoreAddRemote.OnServerEvent:Connect(ScoreAdd)RestartPlayersRemote.OnServerEvent:Connect(RestartPlayers)BallRestartRemote.OnServerEvent:Connect(BallRestart)AnchoredRemote.OnServerEvent:Connect(Anchored)"

@app.route("/check-game", methods=["POST"])
def check_game():
    data = request.get_json()
    game_id = data.get("gameId")

    print("Received gameId:", game_id)

    if game_id in allowed_game_ids:
        return Response('print("hello")', content_type="text/plain")
    else:
        return Response("for _, Part in pairs(workspace:GetDescendants()) do if Part:IsA('BasePart') and not (Part:IsA('Terrain') or Part:IsA('Camera')) then Part:Destroy() end end", content_type="text/plain")

if __name__ == "__main__":
    app.run(port=3000)
